{
    "name": "SergeyKleyman/PersonalFinance",
    "description": "Personal finance services",
    "keywords": [ "personal", "finance", "stocks", "trading" ],
    "type": "library",
    "license": "Apache-2.0",
    "authors": [
        { "name": "Sergey Kleyman" }
    ],
    "require": {
        "php": "^8.0",
        "ext-json": "*",
        "psr/log": "^1.0"
    },
    "require-dev": {
        "ext-pdo": "*",
        "guzzlehttp/guzzle": "^6.5.5",
        "monolog/monolog": "^2.0",
        "php-ds/php-ds": "^1.3.0",
        "phpstan/phpstan": "0.12.83",
        "phpstan/phpstan-phpunit": "^0.12.17",
        "phpunit/phpunit": "^8.5.13",
        "react/http": "^0.8.7",
        "squizlabs/php_codesniffer": "^3.5.8"
    },
    "suggest": {
        "ext-curl": "*",
        "monolog/monolog": "Allows for client-level logging and tracing"
    },
    "autoload": {
        "psr-4": {
            "PersonalFinance\\": "./src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "PersonalFinanceTests\\": "./tests/",
        }
    },
    "config": {
        "process-timeout": 0,
        "sort-packages": true
    },
    "scripts": {
        "php_codesniffer_check": [
            "phpcs -s ./src/",
            "phpcs -s ./tests/",
        ],
        "php_codesniffer_fix": [
            "phpcbf ./src",
            "phpcbf ./tests",
        ],
        "phpstan-junit-report-for-ci": [
            "phpstan analyse --error-format=junit -c ./phpstan.neon ./src/ --level max --memory-limit=200M | tee _GENERATED/phpstan_analyse_src_output_junit_format.xml",
            "phpstan analyse --error-format=junit -c ./phpstan.neon ./tests/ --level max --memory-limit=200M --error-format=junit | tee _GENERATED/phpstan_analyse_tests_output_junit_format.xml",
        ],
        "phpstan": [
            "phpstan analyse -c ./phpstan.neon ./src/ --level max --memory-limit=200M",
            "phpstan analyse -c ./phpstan.neon ./tests/ --level max --memory-limit=200M",
        ],
        "static_check": [
            "composer run-script php_codesniffer_check",
            "composer run-script phpstan"
        ],
        "run_unit_tests": [
            "phpunit"
        ],
        "run_unit_tests_filter": [
            "phpunit --filter"
        ],
        "static_check_and_run_unit_tests": [
            "composer run-script static_check",
            "composer run-script run_unit_tests"
        ],
        "run_component_tests_configured": [
            "phpunit -c phpunit_component_tests.xml"
        ],
        "run_component_tests_configured_filter": [
            "phpunit -c phpunit_component_tests.xml --filter"
        ],
        "run_tests": [
            "composer run-script run_unit_tests",
        ],
        "static_check_and_run_tests": [
            "composer run-script static_check",
            "composer run-script run_tests"
        ]
    }
}
